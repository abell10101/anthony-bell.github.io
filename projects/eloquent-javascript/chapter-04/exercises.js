////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(x, y, step) {
  var arr = []
  if (x === y){
    return arr
  }else if (step === undefined){
    for (i = x; i < y + 1; i++){
      arr.push(i)
    }
  }else if  (step > 0){
    for (i = x; i < y + 1; i += step){
      arr.push(i)
    }
  }else{
    return arr
  }
  return arr
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(array) {
  sums = 0
  if (array.length === 0){
    return 0
  }else{
    for (num in array){
      sums += array[num]
    }
  }
  return sums
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  newArr = []
  if (array.length === 0){
    return array
  }else{
    for (i = array.length - 1; i > -1; i--){
      newArr.push(array[i])
    }
  }
  return newArr
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
  newArr = []
  if (array.length === 0){
    return array
  }else{
    for (num in array){
      newArr.push(array[num])
      //console.log(newArr)
    }
    for (i = array.length - 1; i > -1; i--){
      array.pop()
      console.log(array)
    }
    for (i = newArr.length - 1; i > -1; i--){
      array.push(newArr[i])
    }
  }
  return array
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
  let rest = null;
  for (let i = array.length - 1; i >= 0; i--){
    rest = {value: array[i], rest: rest}
  }
  return rest
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list, output = []) {
  if (list.rest === null){
output.push(list.value)
return output
  }
  output.push(list.value)
  return listToArray(list.rest, output)
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(value, list) {
  return {value, rest: list}
  }


////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, n) {

  if (!list) {
    return undefined
  }else if (n === 0) {
    return list.value
  }else{
     return nth(list.rest, n - 1)
    };
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(x, y) {
  if (typeof x !== "object" && typeof y !== "object"){
    return x === y
  }

  if (typeof x !== "object" || typeof y !== "object"){
    return false
  }

  var xKeys = Object.keys(x)
  var yKeys = Object.keys(y)

  for (let i = 0; i < xKeys.length; i++){
    if (!yKeys.includes(xKeys[i]) || !deepEqual(x[xKeys[i]], y[yKeys[i]])){
      return false
    }   
  }
  return true
}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
